{
  "data": [{
      'title': '前言',
      'text': [{
        'textt': 'javascript是一门简单的语言，也是一门复杂的语言。说它简单，是因为学会使用它只需片刻功夫；而说它复杂，是因为要真正掌握它则需要数年时间。实际上，前端工程师很大程度上就是指javascript工程师。前端入门容易精通难，说的是前端，更指的是javascript。本文是javascript基础语法的第一篇——词法结构。词法结构是一套基础性规则，用来描述如何使用javascript来编写程序'
      }]
    },
    {
      'title': '与java关系',
      'text': [{
          'textt': '关于javascript有这样一个说法，java和javascript的关系是雷锋和雷锋塔的关系。那到底有没有关系呢'
        },
        {
          'textt': 'javascript最开始的名字是LiveScript，后来选择javascript作为其正式名称的原因，大概是想让它听起来有系出名门的感觉。除了语法看起来和java类似之外，javascript和java是完全不同的两种编程语言'
        },
        {
          'textt': '  程序设计语言分为解释型和编译型两大类。java或C++等语言需要一个编译器。编译器是一种程序，能够把用java等高级语言编写出来的源代码翻译为直接在计算机上执行的文件。解释型程序设计语言不需要编译器——它们仅需要解释器，浏览器中的javascript解释器将直接读入源代码并执行'
        },
        {
          'textt': ' java在理论上几乎可以部署在任何环境，但javascript却倾向于只应用在web浏览器。而且，在javascript语言中，函数是一种独立的数据类型，采用基于原型对象（prototype）的继承链，javascript语法要比Java自由得多'
        }
      ]
    },
    {
      'title': '定义',
      'text': [{
        'textt': 'javascript是一门动态的、弱类型的解释型编程语言，非常适合面向对象和函数式的编程风格。javascript的语法源自java，这句话的意思是  动态是指他可以动态添加代码增加，修改，删除，查询这就是所谓的动态现在说的话没有编程基础的人也听不懂，到后面说道变量的时候咱们在说，解释型语言的意思就是说计算机是不会认识我们写的代码的 所有的代码都会编译成计算机认识的语言，也就是我们常说的二进制数据，解释型语言和编译型语言的区别在于解释型会解释一句执行一句 而编译型语言是全部先解释然后在执行，面向对象 与  函数式编程到后面会讲到'
      }]
    },
    {
      'title': '大小写敏感',
      'text': [{
          'textt': '关于javascript这门语言，再怎么强调都不为过的特性是大小写敏感。javascript中的关键字、变量、函数名和所有的标识符都必须采取一致的大小写形式'
        },
        {
          "textt": "'online'、'Online'、'OnLine'、'ONLINE'是四个不同的变量名  没关系有可能你不知道变量是啥^_^ 后面会说到"
        }
      ]
    },
    {
      'title': '保留字',
      'text': [{
          'textt': '和其他任何编程语言一样，javascript保留了一些标识符为自己所用。这些保留字不能用做普通的标识符。由于好多参考书的误导，貌似保留字和关键字是分开的，其实并不是，关键字只是保留字的一部分。保留字包括关键字、未来保留字、空字面量和布尔值字面量'
        },
        {
          'textt': 'abstract boolean byte char class constdouble enum export extends final float goto implements import int interfacelong native package private protected public short  static super synchronized throw transient volatile '
        },
        {
          'textt': '怎么去理解保留字呢  其实就是你自己定义的函数名，定义的变量名不要使用保留字就行了'
        }
      ]
    },
    {
      'title': '注释',
      'text': [{
          'textt': '不是所有语句都需要javascript解释器去解释并执行。有时需要在脚本中写一些仅供自己参考或提醒自己的信息，并希望javascript解释器能直接忽略掉这些信息，这类信息就是注释'
        },
        {
          'textt': '注释能有效帮助了解代码流程，在代码中它们扮演生活中便条的角色，可以帮助我们弄清楚脚本到底干了什么'
        },
        {
          'textt': '[注意]注释一定要精确地描述代码，没有用的注释比没有注释还要糟糕'
        },
        {
          'textt': '有多种方式可以在javascript脚本中插入注释，包括单行注释、多行注释和HTML风格的注释'
        },
        {
          'textt': '【1】单行注释以两个斜杠开头'
        },
        {
          'textt': '//单行注释'
        },
        {
          'textt': '【2】多行注释又叫块级注释，以一个斜杠和一个星号/*开头，以一个星号和一个斜杠*/结尾'
        },
        {
          'textt': '/*这是一个多行注释*/'
        }
      ]
    },
    {
      'title': '参考资料',
      'text': [{
          'textt': '【1】 ES5/词法            <a style="color: blue" href="https://www.w3.org/html/ig/zh/wiki/ES5/lexical" target="view_window">https://www.w3.org/html/ig/zh/wiki/ES5/lexical</a> '
        },
        {
          'textt': '【2】 阮一峰Javascript标准参考教程——语法概述            <a style="color: blue" href="http://javascript.ruanyifeng.com/grammar/basic.html"  target="view_window">http://javascript.ruanyifeng.com/grammar/basic.html</a> '
        },
        {
          'textt': '【3】 W3School-Javascript高级教程——ECMAScript语法            <a style="color: blue" href="http://www.w3school.com.cn/js/pro_js_syntax.asp"  target="view_window">http://www.w3school.com.cn/js/pro_js_syntax.asp</a> '
        }
      ]
    }
  ],
  'title': '词法结构'
}