{
  "data": [{
      'title': '前言',
      'text': [{
        'textt': '关于javascript，第一个比较重要的概念是变量，变量的工作机制是javascript的基本特性。实际上，变量是标识符的一种。本文将详细介绍变量和标识符'
      }]
    },
    {
      'title': '定义',
      'text': [{
        'textt': '标识符(Identifier)就是一个名字，用来对变量、函数、属性、参数进行命名，或者用做某些循环语句中的跳转位置的标记',
        'dataText': ['<span style="color: #008000;">//变量</span>', '<span style="">var&nbsp;</span><span> Identifier&nbsp;=&nbsp;</span><span style="">123;</span>', '<span style="color: #008000;">//属性</span>', '<span>(</span>&nbsp;<span>new&nbsp;</span><span>Object).Identifier&nbsp;=&nbsp;</span><span class="num">"test"</span><span>;</span>', '<span style="color: #008000;">//函数及参数</span>', '<span>function   IdentifierName(Identifier1){};</span>'],
        'texts': '在日常生活中，有些东西是固定不变的，有些东西则会发生变化。例如，人的姓名和生日是固定不变的，但心情和年龄却会随着时间变化而变化。人们把那些会发生变化的东西称为变量'
      }]
    },
    {
      'title': '命名规则',
      'text': [{
          'textt': '在词法结构一文中，我们介绍到javascript是一门区分字母大小写的语言，且和其他任何编程语言一样，javascript保留了一些标识符为自己所用，保留字不能用做普通的标识符'
        },
        {
          'textt': '[注意]保留字包括关键字、未来保留字、空字面量和布尔值字面量'
        },
        {
          'textt': '变量的命名的开头只能是  $ 、_ 、或 英文字母'
        }
      ]
    },
    {
      'title': '变量声明',
      'text': [{
          'textt': '在javascript中，变量是使用关键字var(variable的缩写)来声明的',
          'dataText': ['<span style="">var&nbsp;i;</span>&nbsp;&nbsp;&nbsp;<span style="color: #008000;">//变量声明</span>', '<span style="">var&nbsp;sun;</span>&nbsp;&nbsp;&nbsp;<span style="color: #008000;">//变量声明</span>'],
        },
        {
          'textt': '也可以通过一个var关键字来声明多个变量',
          'dataText': ['<span>var &nbsp; i,&nbsp;  sun;</span>&nbsp;&nbsp;&nbsp;<span style="color: #008000;">//声明多个变量用逗号隔开，结束使用分号;</span>']
        },
        {
          'textt': '把值存入变量的操作称为赋值。一个变量被赋值以后，我们就说该变量包含这个值'
        },
        {
          'textt': '给变量第一次赋值的过程，叫初始化'
        },
        {
          'textt': '我们可以将变量的初始赋值和变量声明合写在一起',
          'dataText': ['<span>var message = "hello";</span>&nbsp;&nbsp;&nbsp;<span style="color: #008000;">//变量声明赋值;</span>', '<span>var i=0,j=0,k=0;</span>&nbsp;&nbsp;&nbsp;<span style="color: #008000;">//变量声明赋值;</span>']
        },
        {
          'textt': '如果未在var声明语句中给变量指定初始值，那么虽然声明了这个变量，但在给它存入一个值之前，它的初始值就是undefined'
        },
        {
          'textt': '使用var语句重复声明变量是合法且无害的，如果重复声明且带有赋值操作，相当于重新赋值'
        },
        {
          'textt': '如果试图读取一个没有声明的变量的值，javascript会报错'
        }
      ]
    },
    {
      'title': '变量特性',
      'text': [{
          'textt': 'javascript变量是弱类型(也叫松散类型)的，所谓松散类型就是可以用来保存任何类型的数据'
        },
        {
          'textt': '编程语言分为动态类型语言和静态类型语言两种。 动态类型语言是指在运行期间才去做数据类型检查的语言，也就是说，在用动态类型的语言编程时，不用给任何变量指定数据类型，该语言会在第一次赋值给变量时，在内部将数据类型记录下来。javascript就是动态类型语言的代表',

        },
        {
          'textt': '在javascript中，可以在修改变量值的同时修改值的类型',
          'dataText': ['<span>var  message  =   "hi";</span>', '<span>message  =  100;</span><span style="color: #008000;">     //有效，但不推荐</span>']
        }
      ]
    },
    {
      'title': '变量作用域',
      'text': [{
          'textt': '变量的作用域(scope)是程序源代码中定义这个变量的区域'
        },
        {
          'textt': '作用域分为全局作用域和函数作用域(又叫局部作用域)两种'
        },
        {
          'textt': '全局作用域是最外围的一个执行环境，在web浏览器中，全局执行环境被认为是window对象。所有全局变量和函数都是作为window对象的属性和方法创建的。全局变量拥有全局作用域，在javascript代码中的任何地方都是有定义的。全局作用域直到应用程序退出例如关闭网页或浏览器时才会被销毁'
        },
        {
          'textt': '在函数内声明的变量只在函数体内有定义。它们是局部变量，作用域是局部性的。函数参数也是局部变量，它们只在函数体内有定义。函数作用域中的所有代码执行完毕后，该作用域被销毁，保存在其中的所有变量和函数定义也随之销毁',
          'dataText': ['<span>function  test(){</span>', '<span>&nbsp;&nbsp;&nbsp;var message   =  "hi";</span>', '<span>}</span>', '<span>test();</span>', '<span>alert(message);</span>    </span><span style="color: #008000;">     //错误</span>']
        },
        {
          'textt': '如果省略var操作符，则会创建一个全局变量',
          'dataText': ['<span>function  test(){</span>', '<span>&nbsp;&nbsp;&nbsp;message   =  "hi";</span>', '<span>}</span>', '<span>test();</span>', '<span>alert(message);</span>    </span><span style="color: #008000;">     //错误</span>']
        },
        {
          'textt': '虽然省略var操作符可以定义全局变量，但并不推荐。在局部作用域中定义的全局变量很难维护，而且如果有意地忽略了var操作符，也会由于相应变量不会马上就有定义而导致不必要的混乱，给未经声明的变量赋值在严格模式下会导致抛出ReferenceError错误'
        },
        {
          'textt': '在函数体内，局部变量的优先级高于同名的全局变量，如果在函数内声明的一个局部变量或者函数参数中带有的变量和全局变量重名，那么全局变量就被局部变量遮盖',
          'dataText': ['<span>var scope = "global";</span>', '<span>function checkscope(){</span>', '<span>&nbsp;&nbsp;&nbsp;var scope = "local";</span>', '<span>&nbsp;&nbsp;&nbsp;return scope;</span>', '<span>};</span>', '<span>checkscope();</span><span style="color: #008000;">     //"local"</span>']
        },
      ]
    },
    {
      'title': '参考资料',
      'text': [{
          'textt': '【1】 ES5/词法            <a style="color: blue" href="https://www.w3.org/html/ig/zh/wiki/ES5/lexical" target="view_window">https://www.w3.org/html/ig/zh/wiki/ES5/lexical</a> '
        },
        {
          'textt': '【2】 阮一峰Javascript标准参考教程——语法概述            <a style="color: blue" href="http://javascript.ruanyifeng.com/grammar/basic.html"  target="view_window">http://javascript.ruanyifeng.com/grammar/basic.html</a> '
        },
        {
          'textt': '【3】 W3School-Javascript高级教程——ECMAScript语法            <a style="color: blue" href="http://www.w3school.com.cn/js/pro_js_syntax.asp"  target="view_window">http://www.w3school.com.cn/js/pro_js_syntax.asp</a> '
        }
      ]
    }
  ],
  'title': '变量与标识符'
}