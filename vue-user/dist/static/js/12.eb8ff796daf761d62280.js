webpackJsonp([12],{"NdG+":function(n,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default="(function (D) {\n    var _ = {\n        extend: function (t, s, o) {\n            if (o === undefined) o = true;\n            for (var p in s) {\n                if (!(p in t) || o) {\n                    t[p] = s[p]\n                }\n            }\n            return t;\n        },\n        addEvent: function (o, e, f) {\n            o.addEventListener ? o.addEventListener(e, f, false) : o.attachEvent('on' + e, function () {f.call(o)})\n        },\n        $ : function (id) {\n            return typeof id === 'string' ? D.getElementById(id) : id;\n        },\n        log : function (s) {\n            !!window.console && console.log(s)\n        }\n    };\n     \n    var NUM = [\n        '####   ##########  #####################    ',\n        '#  #   #   #   ##  ##   #      ##  ##  #    ',\n        '#  #   #   #   ##  ##   #      ##  ##  #  # ',\n        '#  #   #####################   #########    ',\n        '#  #   ##      #   #   ##  #   ##  #   #  # ',\n        '#  #   ##      #   #   ##  #   ##  #   #    ',\n        '####   #########   #########   #########    '\n    ]\n     \n    var TM, tm, MF = Math.floor, ow = 3, od = 2, NT = [], _NT = [], scr, W, H, iPos = {}, e = 0, O = [], AO = {}, grid, gw, gh;\n     \n    function getTime () {\n        // reset AO\n        AO = {};\n         \n        tm = TM;\n        var T = new Date(),\n            h = T.getHours(),\n            m = T.getMinutes(),\n            s = T.getSeconds();\n        TM = [\n            MF(h/10),\n            h%10,\n            MF(m/10),\n            m%10,\n            MF(s/10),\n            s%10\n        ];\n        \n        setTimeout(getTime, 1000);\n    }\n     \n     \n    function toNT(TM, NT) {\n        for (var i = 0; i < 7; i ++) {\n            var temp = [];\n            for (var j = 0; j < TM.length; j ++) {\n                temp.push(NUM[i].substr(TM[j]*4, 4));\n                if (j == 1 || j == 3) {\n                    temp.push(NUM[i].substr(40, 4))\n                }\n            }\n            NT[i] = temp.join('');\n        }\n    }\n     \n    function CNum () {\n        toNT(TM, NT);\n        if (tm && tm.length) {toNT(tm, _NT)}\n        DrawNum();\n        setTimeout(CNum, 20)\n    }\n     \n    function DrawNum () {\n        var ind = 0;\n        for (var i = 0; i < NT.length; i ++) {\n            for (var j = 0; j < NT[i].length; j ++) {\n             \n                var _char = '@', nchar = NT[i].charAt(j);\n                 \n                var c = nchar === '#' ? 'blue' : 'gray';\n                     \n                if (nchar === '#') {\n                    if (MF(j/4) < 3) c = 'red';\n                    else if (MF(j/4) < 6) c = 'blue';\n                    else if (MF(j/4) < 8) c = 'green';\n                } else {\n                    c = 'gray';\n                }\n                 \n                if (O.length >= 4*8*7) {\n                    O[ind].o.className = c;\n                    O[ind].o.style.left = j*(ow + od) + MF(j/4)*6 + iPos.x + 'px';\n                    O[ind].o.style.top = i*(ow + od) + iPos.y + 'px';\n                } else {\n                    O.push(new Dot(c, {\n                        l: j*(ow + od) + MF(j/4)*6 + iPos.x,\n                        t: i*(ow + od) + iPos.y\n                    }));\n                }\n                // dot anim\n                if (_NT.length === 7) {\n                    _char = _NT[i].charAt(j);\n                    if (_char === '#' && nchar === ' ') {\n                        var k = 'k'+i+'_'+j, _c;\n                        if (MF(j/4) < 3) _c = 'red';\n                        else if (MF(j/4) < 6) _c = 'blue';\n                        else if (MF(j/4) < 8) _c = 'green';\n                        if (!AO[k]) {\n                            AO[k] = new Dot(_c, {\n                                l: j*(ow + od) + MF(j/4)*6 + iPos.x,\n                                t: i*(ow + od) + iPos.y\n                            })\n                            //_.log(k)\n                            AO[k].anim()\n                        }\n                    }\n                }\n                 \n                ind ++;\n            }\n        }\n    }\n     \n    // DOT constructor\n    function Dot (color, pos) {\n        var g = Math.random();\n             \n        this.o = D.createElement('span');\n        this.vx = this.vy = this.dx = this.dy = 0;\n        this.vy = -this.randNum(1, 5);\n        this.dir = Math.random() > .5 ? this.randNum(1, 5) : -1*this.randNum(1, 5);\n        this.g = g < .1 ? .1 : g;\n        this.x = pos.l;\n        this.y = pos.t;\n        scr.appendChild(this.o);\n         \n        this.setStyle(color, pos);\n    }\n    _.extend(Dot.prototype, {\n        setStyle: function (c, pos) {\n            var sty = this.o.style;\n            this.o.className = c;\n            sty['width'] = ow + 'px';\n            sty['height'] = ow + 'px';\n            sty['position'] = 'absolute';\n            sty['left'] = pos.l + 'px';\n            sty['top'] = pos.t + 'px';\n        },\n        randNum: function (f, t) {\n            return Math.round(Math.random()*(t-f)) + f;\n        },\n        move: function () {\n            this.x += this.dx;\n            this.y += this.dy;\n            this.vx += this.dx;\n            this.vy += this.dy;\n             \n            this.o.style['left'] = this.x + 'px';\n            this.o.style['top'] = this.y + 'px';\n             \n        },\n        boundary: function () {\n            //gravity\n            this.vy += this.g;\n            this.x += this.dir;\n            this.y += this.vy;\n             \n            if (this.x < 0  || this.x > W) {\n                clearInterval(this.st);\n                scr.removeChild(this.o);\n            }\n             \n            if (this.y > H-10 && this.vy > 0) {\n                this.vy *= -1;\n            }\n             \n            //this.dotCollision();\n        },\n        dotCollision: function () {\n            var gx = Math.round(this.x/10), \n                gy = Math.round(this.y/10);\n                for (var ix = gx - 1; ix <= gx + 1; ix++) { \n                    for (var iy = gy - 1; iy <= gy + 1; iy++) {\n                        var g = grid[iy * gw + ix] || [];\n                        for (j = 0, l = g.length; j < l; j++) {\n                            var that = g[j];\n                            var dx = that.x - this.x;\n                            var dy = that.y - this.y;\n                            var d = Math.sqrt(dx * dx + dy * dy);\n                            if (d < 10 && d > 0) {\n                                dx = (dx / d) * (10 - d) * .0025;\n                                dy = (dy / d) * (10 - d) * .0025;\n                                this.dx -= dx;\n                                this.dy -= dy;\n                                that.dx += dx;\n                                that.dy += dy;\n                            }\n                        }\n                    }\n                }\n                 \n            if (!grid[gy * gw + gx]) grid[gy * gw + gx] = [this];\n            else grid[gy * gw + gx].push(this);\n        },\n        anim: function () {\n            var _this = this;\n            this.st = setInterval(function () {\n                _this.move();\n                _this.boundary();\n            }, 16)\n        }\n    })\n     \n    function resize () {\n        W = scr.offsetWidth;\n        H = scr.offsetHeight;\n        iPos.x = (W-32*(ow+od)-6*8)/2;\n        iPos.y = (H-7*(ow+od))/2;\n    }\n     \n    // init\n   \n    \n    scr = _.$('screen');\n    resize();\n    getTime();\n    CNum();\n    gw = Math.round(W/10); \n    gh = Math.round(H/10);\n    grid = new Array(gw * gh);\n\n    _.addEvent(window, 'resize', resize)\n     \n})(document)"}});
//# sourceMappingURL=12.eb8ff796daf761d62280.js.map